{"ast":null,"code":"import _classCallCheck from\"/Users/r-maria/Desktop/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/r-maria/Desktop/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this._headers=headers;}//проверка корректности ответа, вызывать при каждом запросе\n_createClass(Api,[{key:\"_handleResponse\",value:function _handleResponse(res){if(res.ok){return res.json();}return Promise.reject(res.status);}//загрузка информации о пользователе с сервера\n},{key:\"getUserInfo\",value:function getUserInfo(){var _this=this;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers}).then(function(res){return _this._handleResponse(res);});}//загрузка карточек с сервера\n},{key:\"getCardList\",value:function getCardList(){var _this2=this;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(function(res){return _this2._handleResponse(res);});}//загрузка новой информации о пользователе на сервер\n},{key:\"patchUserInfo\",value:function patchUserInfo(_ref2){var _this3=this;var name=_ref2.name,about=_ref2.about;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:name,about:about})}).then(function(res){return _this3._handleResponse(res);});}//обновление аватара пользователя\n},{key:\"updateUserAvatar\",value:function updateUserAvatar(_ref3){var _this4=this;var avatar=_ref3.avatar;return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:avatar})}).then(function(res){return _this4._handleResponse(res);});}//загрузка новой карточки на сервер\n},{key:\"addCard\",value:function addCard(_ref4){var _this5=this;var name=_ref4.name,link=_ref4.link;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:name,link:link})}).then(function(res){return _this5._handleResponse(res);});}//запрос на удаление карточки\n},{key:\"deleteCard\",value:function deleteCard(id){var _this6=this;return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id),{method:'DELETE',headers:this._headers}).then(function(res){return _this6._handleResponse(res);});}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(id,isLike){var _this7=this;return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id,\"/likes\"),{method:isLike?'PUT':'DELETE',headers:this._headers}).then(function(res){return _this7._handleResponse(res);});}}]);return Api;}();export var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-71',headers:{authorization:'4007c4a6-1dc8-477b-8692-004338e6361b','Content-Type':'application/json'}});","map":{"version":3,"names":["Api","_ref","baseUrl","headers","_classCallCheck","_baseUrl","_headers","_createClass","key","value","_handleResponse","res","ok","json","Promise","reject","status","getUserInfo","_this","fetch","concat","then","getCardList","_this2","patchUserInfo","_ref2","_this3","name","about","method","body","JSON","stringify","updateUserAvatar","_ref3","_this4","avatar","addCard","_ref4","_this5","link","deleteCard","id","_this6","changeLikeCardStatus","isLike","_this7","api","authorization"],"sources":["/Users/r-maria/Desktop/dev/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor({ baseUrl, headers }) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    //проверка корректности ответа, вызывать при каждом запросе\n    _handleResponse (res) {\n        if (res.ok) {\n            return res.json()\n        }\n        return Promise.reject(res.status)\n    }\n\n    //загрузка информации о пользователе с сервера\n    getUserInfo() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n            .then(res => this._handleResponse(res))\n    }\n\n    //загрузка карточек с сервера\n    getCardList() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n            .then(res => this._handleResponse(res))\n\n    }\n\n    //загрузка новой информации о пользователе на сервер\n    patchUserInfo({ name, about }) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({ name, about })\n        })\n            .then(res => this._handleResponse(res))\n\n    }\n\n    //обновление аватара пользователя\n    updateUserAvatar({ avatar }) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({ avatar })\n        })\n            .then(res => this._handleResponse(res))\n\n    }\n\n    //загрузка новой карточки на сервер\n    addCard({ name, link}) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({ name, link })\n        })\n            .then(res => this._handleResponse(res))\n    }\n\n    //запрос на удаление карточки\n    deleteCard(id) {\n        return fetch(`${this._baseUrl}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(res => this._handleResponse(res))\n    }\n\n    changeLikeCardStatus(id, isLike) {\n        return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n                method: isLike ? 'PUT' : 'DELETE',\n                headers: this._headers\n            }\n        )\n            .then(res => this._handleResponse(res))\n    }\n}\n\nexport const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-71',\n    headers: {\n        authorization: '4007c4a6-1dc8-477b-8692-004338e6361b',\n        'Content-Type': 'application/json'\n    }\n})\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}